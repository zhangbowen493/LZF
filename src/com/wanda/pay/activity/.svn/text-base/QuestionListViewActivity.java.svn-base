package com.wanda.pay.activity;

import java.util.HashMap;
import java.util.Map;

import org.json.JSONObject;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.google.zxing.BarcodeFormat;
import com.umeng.update.UmengUpdateAgent;
import com.wanda.pay.R;
import com.wanda.pay.R.string;
import com.wanda.pay.app.WDApplication;
import com.wanda.pay.bean.Constant_data;
import com.wanda.pay.bean.HandlerConstant;
import com.wanda.pay.bean.UserBean;
import com.wanda.pay.dialog.CustomProgressDialog;
import com.wanda.pay.util.ApiClient;
import com.wanda.pay.util.Result;
import com.wanda.pay.util.SPUtils;
import com.wanda.pay.util.ScreenManager;
import com.wanda.pay.util.ToastUtil;
import com.wanda.pay.util.Tools;
import com.wanda.pay.util.URLs;

/**
 * 主界面
 * 
 * @author kevin
 * 
 */
public class MainPageActivity extends BaseActivity implements IMVCActivity,
		OnClickListener {

	public static MainPageActivity instance = null;
	Context mContext = this;
	private TextView _MPTV_Title;
	private String lognname;
	private LoginOutTask loginOutTask;
	private WDApplication mApplication;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_home_page);
		instance = this;
		// /**启动友盟自动升级检测*/
		// UmengUpdateAgent.update(this);
		initView();
	}

	@Override
	public void onResume() {
		// TODO Auto-generated method stub
		init();
		refresh();
		super.onResume();
	}

	@Override
	public void init() {
		lognname=getIntent().getStringExtra("loginName");
	}

	@Override
	public void initView() {
		// TODO Auto-generated method stub
		findViewById(R.id.act_btn_home_user_center).setOnClickListener(this);
		findViewById(R.id.act_btn_home_scanning_pay).setOnClickListener(this);
		findViewById(R.id.act_btn_home_query_detail).setOnClickListener(this);
		findViewById(R.id.act_tv_home_user_info).setOnClickListener(this);
		findViewById(R.id.act_tv_home_bank_manage).setOnClickListener(this);
		findViewById(R.id.act_tv_home_outstanding_orders).setOnClickListener(
				this);
		findViewById(R.id.act_tv_home_login_password_manage)
				.setOnClickListener(this);
		findViewById(R.id.act_tv_home_pay_password_manage).setOnClickListener(
				this);
		findViewById(R.id.act_tv_home_exit).setOnClickListener(this);

	}

	@Override
	public void refresh(Object... param) {
		// TODO Auto-generated method stub
	}

	/**
	 * 提示去登录
	 */
	private void showLogOut() {
		final Dialog mDialog = new Dialog(mContext, R.style.myDilog);
		mDialog.setContentView(R.layout.dialog_layout);
		Button sure = (Button) mDialog.findViewById(R.id.dialog_btn_ok);
		Button back = (Button) mDialog.findViewById(R.id.dialog_btn_cancel);
		TextView _DialogTV = (TextView) mDialog
				.findViewById(R.id.dialog_tv_msg);
		_DialogTV.setText("您将要登出当前帐号？");
		mDialog.setCanceledOnTouchOutside(false);

		sure.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				ExtitAPP();
				if (mDialog.isShowing())
					mDialog.dismiss();
			}
		});
		back.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				if (mDialog.isShowing())
					mDialog.dismiss();
			}
		});
		Window window = mDialog.getWindow();
		window.setGravity(Gravity.CENTER); // 此处可以设置dialog显示的位置
		window.setWindowAnimations(R.style.mystyle); // 添加动画
		mDialog.show();
	}

	@Override
	public void MyBack() {
		// TODO Auto-generated method stub
		showLogOut();
	}

	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		switch (v.getId()) {
		case R.id.act_btn_home_user_center:
			// 个人信息
			startActivity(new Intent(mContext, MainViewPagerActivity.class));
			break;
		case R.id.act_tv_home_user_info:
			// 个人信息
			startActivity(new Intent(mContext, UserCenterActivity.class));
			break;
		case R.id.act_btn_home_scanning_pay:
			// 扫描支付-done
			Intent intent = new Intent(mContext, CaptureActivity.class);
			startActivityForResult(intent, 1);
			break;
		case R.id.act_btn_home_query_detail:
			// 交易查询-done
			Intent intent4 = new Intent(mContext,
					TransactionRecordsActivity.class);
			intent4.putExtra("SearchState", "3");
			startActivity(intent4);
			break;
		case R.id.act_tv_home_bank_manage:
			// 银行卡管理-done
			Intent intent1 = new Intent(mContext, BankCenterActivity.class);
			startActivity(intent1);
			break;
		case R.id.act_tv_home_outstanding_orders:
			// 未完成订单
			// ToastUtil.showShort(mContext, "敬请期待！");
			Intent intent5 = new Intent(mContext,
					TransactionRecordsActivity.class);
			intent5.putExtra("SearchState", "0");
			startActivity(intent5);
			break;
		case R.id.act_tv_home_login_password_manage:
			// 登录密码管理-done
			Intent intent3 = new Intent(mContext, SetPasswordActivity.class);
			intent3.putExtra("AccessType", 5);
			intent3.putExtra("loginName",lognname);
			startActivity(intent3);
			break;
		case R.id.act_tv_home_pay_password_manage:
			// 支付密码管理-done
			Intent intent2 = new Intent(mContext, SetPasswordActivity1.class);
			intent2.putExtra("loginName",lognname);
			intent2.putExtra("AccessType", 2);
			startActivity(intent2);
			break;
		case R.id.act_tv_home_exit:
			// 登出
			showLogOut();
			break;

		default:
			break;
		}
	}

	@Override
	public boolean onKeyDown(int keyCode, KeyEvent event) {
		// TODO Auto-generated method stub
		// 返回键
		if (keyCode == KeyEvent.KEYCODE_BACK) {
			 MyBack();
//			mApplication = WDApplication.getInstance();
//			mApplication.mScreenManager = ScreenManager.getScreenManager();
//			mApplication.mScreenManager.popAlls();
		}
		return super.onKeyDown(keyCode, event);
	}

	@Override
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {

		if (requestCode == 1 && resultCode == RESULT_OK) {
			String erHttp = data.getStringExtra("result");
			String url_main_www = URLs.URL_MAIN_www.substring(0,
					URLs.URL_MAIN_www.length() - 1);
			String url_main_222 = URLs.URL_MAIN_test.substring(0,
					URLs.URL_MAIN_test.length() - 1);
			if (erHttp.startsWith(url_main_www)
					|| erHttp.startsWith(url_main_222)) {
				Intent intent = new Intent(mContext, ScanPayMoneyActivity.class);
				intent.putExtra("data", erHttp);

				startActivity(intent);
			} else {
				showURL(erHttp);
			}
		}
		super.onActivityResult(requestCode, resultCode, data);
	}

	/**
	 * 提示去登录
	 */
	private void showURL(final String url) {
		final Dialog mDialog = new Dialog(mContext, R.style.myDilog);
		mDialog.setContentView(R.layout.dialog_layout);
		Button sure = (Button) mDialog.findViewById(R.id.dialog_btn_ok);
		Button back = (Button) mDialog.findViewById(R.id.dialog_btn_cancel);
		TextView _DialogTV = (TextView) mDialog
				.findViewById(R.id.dialog_tv_msg);
		_DialogTV.setText("提示！\n\n可能存在风险，是否打开此链接？\n" + url);
		mDialog.setCanceledOnTouchOutside(false);
		sure.setText("打开链接");
		back.setText("取消");
		sure.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				if (Tools.isURL(url)) {
					Intent intent = new Intent();
					intent.setAction("android.intent.action.VIEW");
					Uri content_url = Uri.parse(url);
					intent.setData(content_url);
					startActivity(intent);
				}else{
					new Handler().postDelayed(new Runnable() {
						@Override
						public void run() {
							// TODO Auto-generated method stub
							ToastUtil.showShort(mContext, "链接打开失败！");
						}
					}, 1000);
				}
				if (mDialog.isShowing())
					mDialog.dismiss();
			}
		});
		
		back.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				if (mDialog.isShowing())
					mDialog.dismiss();
			}
		});
		Window window = mDialog.getWindow();
		window.setGravity(Gravity.CENTER); // 此处可以设置dialog显示的位置
		window.setWindowAnimations(R.style.mystyle); // 添加动画
		mDialog.show();
	}

	/**
	 * APP登出
	 */
	private void ExtitAPP() {
		// TODO Auto-generated method stub
		CustomProgressDialog.showProgressDialog(mContext, "loading");
		loginOutTask = new LoginOutTask();
		loginOutTask.execute();
	}

	/**
	 * 用户登出
	 * 
	 * @author kevin
	 * 
	 */
	private class LoginOutTask extends AsyncTask<String, Void, Boolean> {
		String strError;
		JSONObject jsonData;
		Exception exception;
		private Result loginResult;

		@Override
		protected Boolean doInBackground(String... prams) {
			// TODO Auto-generated method stub
			try {
				UserBean userBean = WDApplication.getInstance().getUserBean();
				if (userBean != null) {
					String _LoginNameType = SPUtils.getString(mContext,
							Constant_data.sp_key_userNameType, "1");
					String _LoginName = SPUtils.getString(mContext,
							Constant_data.sp_key_loginName, "");

					Map<String, Object> pramsMap = new HashMap<String, Object>();

					pramsMap.put("operationType", "1");
					pramsMap.put("loginType", _LoginNameType);
					pramsMap.put("isLogin", "0");
					pramsMap.put("loginName", _LoginName);

					loginResult = ApiClient.Login(mContext, pramsMap);

				}

			} catch (Exception e) {
				e.printStackTrace();
				exception = e;
			}
			return loginResult != null;
		}

		@Override
		protected void onPostExecute(Boolean result) {
			CustomProgressDialog.hideProgressDialog();
			if (exception != null) {
				Toast.makeText(getApplicationContext(),
						getResources().getString(string.http_error_anomalies),
						Toast.LENGTH_LONG).show();
				return;
			}
			if (result) {
				if (Constant_data.HTTP_SUCCESS.equals(loginResult.coder)) {

					WDApplication.getInstance().setUserBean(null);
					SPUtils.clear(mContext);
					Intent intent = new Intent(mContext, LoginActivity.class);
					intent.putExtra("isExit", true);
					startActivity(intent);
					MainPageActivity.this.finish();
				} else {
					strError = loginResult.msg;
					ToastUtil.showShort(mContext, strError);
				}
			} else {
				ToastUtil.showShort(mContext,
						getResources().getString(string.http_error_anomalies));
			}
			super.onPostExecute(result);
		}

		@Override
		protected void onCancelled() {
			loginOutTask = null;
			super.onCancelled();
		}

	}
}
